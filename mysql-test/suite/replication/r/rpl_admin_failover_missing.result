# Dump of table test_relay.t1 for server rep_master_gtid:
a,b
1,one
2,two
3,three
4,four
# Dump of table test_relay.t1 for server rep_slave1_gtid:
a,b
1,one
# Dump of table test_relay.t1 for server rep_slave2_gtid:
a,b
1,one
# Dump of table test_relay.t1 for server rep_slave3_gtid:
a,b
1,one
2,two
# Dump of table test_relay.t1 for server rep_slave4_gtid:
a,b
1,one
2,two
3,three
4,four
Test case 1 - failover to localhost:PORT2 with relay log entries
# Checking privileges.
# Checking privileges on candidates.
# Performing failover.
# Checking eligibility of slave localhost:PORT2 for candidate.
#   GTID_MODE=ON ... Ok
#   Replication user exists ... Ok
# Candidate slave localhost:PORT2 will become the new master.
# Preparing candidate for failover.
# Reading events in relay log for slave localhost:PORT3
# Missing transactions found on localhost:PORT3. SELECT gtid_subset() = 0
# LOCK STRING: FLUSH TABLES WITH READ LOCK
# Connecting candidate to localhost:PORT3 as a temporary slave to retrieve unprocessed GTIDs.
# Change master command for localhost:PORT2
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT3, MASTER_AUTO_POSITION=1
# UNLOCK STRING: UNLOCK TABLES
# Waiting for candidate to catch up to slave localhost:PORT3.
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXXX
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXXX
# Reading events in relay log for slave localhost:PORT4
# Missing transactions found on localhost:PORT4. SELECT gtid_subset() = 0
# LOCK STRING: FLUSH TABLES WITH READ LOCK
# Connecting candidate to localhost:PORT4 as a temporary slave to retrieve unprocessed GTIDs.
# Change master command for localhost:PORT2
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT4, MASTER_AUTO_POSITION=1
# UNLOCK STRING: UNLOCK TABLES
# Waiting for candidate to catch up to slave localhost:PORT4.
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXXX
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXXX
# Reading events in relay log for slave localhost:PORT5
# Missing transactions found on localhost:PORT5. SELECT gtid_subset() = 0
# LOCK STRING: FLUSH TABLES WITH READ LOCK
# Connecting candidate to localhost:PORT5 as a temporary slave to retrieve unprocessed GTIDs.
# Change master command for localhost:PORT2
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT5, MASTER_AUTO_POSITION=1
# UNLOCK STRING: UNLOCK TABLES
# Waiting for candidate to catch up to slave localhost:PORT5.
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXXX
# Slave localhost:PORT2:
# QUERY = SELECT WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS(XXXXXXXXX)
# Return Code = XXXX
# Creating replication user if it does not exist.
# Stopping slaves.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT3 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT3 Ok
#   Executing stop on slave localhost:PORT4 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT4 Ok
#   Executing stop on slave localhost:PORT5 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT5 Ok
# Switching slaves to new master.
# Change master command for localhost:PORT3
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT2, MASTER_AUTO_POSITION=1
# Change master command for localhost:PORT4
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT2, MASTER_AUTO_POSITION=1
# Change master command for localhost:PORT5
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT2, MASTER_AUTO_POSITION=1
# Starting slaves.
# Performing START on all slaves.
#   Executing start on slave localhost:PORT3 Ok
#   Executing start on slave localhost:PORT4 Ok
#   Executing start on slave localhost:PORT5 Ok
# Checking slaves for errors.
# localhost:PORT3 status: Ok 
# localhost:PORT4 status: Ok 
# localhost:PORT5 status: Ok 
# Failover complete.
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
#
# Replication Topology Health:
# ...done.
# Dump of table test_relay.t1 for server rep_master_gtid:
a,b
1,one
2,two
3,three
4,four
# Dump of table test_relay.t1 for server rep_slave1_gtid:
a,b
1,one
2,two
3,three
4,four
# Dump of table test_relay.t1 for server rep_slave2_gtid:
a,b
1,one
2,two
3,three
4,four
# Dump of table test_relay.t1 for server rep_slave3_gtid:
a,b
1,one
2,two
3,three
4,four
# Dump of table test_relay.t1 for server rep_slave4_gtid:
a,b
1,one
2,two
3,three
4,four
Test case 2 - failover to localhost:PORT3 with skipping slaves
# Checking privileges.
# Checking privileges on candidates.
# Performing failover.
# Checking eligibility of slave localhost:PORT3 for candidate.
#   GTID_MODE=ON ... Ok
#   Replication user exists ... Ok
# Candidate slave localhost:PORT3 will become the new master.
# Preparing candidate for failover.
# Reading events in relay log for slave localhost:PORT4
# No missing transactions found on localhost:PORT4. Skipping connection of candidate as slave.
# Reading events in relay log for slave localhost:PORT5
# No missing transactions found on localhost:PORT5. Skipping connection of candidate as slave.
# Creating replication user if it does not exist.
# Stopping slaves.
# Performing STOP on all slaves.
#   Executing stop on slave localhost:PORT4 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT4 Ok
#   Executing stop on slave localhost:PORT5 WARN - slave is not configured with this master
#   Executing stop on slave localhost:PORT5 Ok
# Switching slaves to new master.
# Change master command for localhost:PORT4
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT3, MASTER_AUTO_POSITION=1
# Change master command for localhost:PORT5
# CHANGE MASTER TO MASTER_HOST = 'localhost', MASTER_USER = 'rpl', MASTER_PASSWORD = 'rpl', MASTER_PORT = PORT3, MASTER_AUTO_POSITION=1
# Starting slaves.
# Performing START on all slaves.
#   Executing start on slave localhost:PORT4 Ok
#   Executing start on slave localhost:PORT5 Ok
# Checking slaves for errors.
# localhost:PORT4 status: Ok 
# localhost:PORT5 status: Ok 
# Failover complete.
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
# Attempting to contact localhost ... Success
#
# Replication Topology Health:
# ...done.
