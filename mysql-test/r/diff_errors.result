Test case 1 - Use diff  --difftype=differ
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# Comparing util_test to util_test                                 [PASS]
# Comparing util_test.f1 to util_test.f1                           [PASS]
# Comparing util_test.p1 to util_test.p1                           [PASS]
# Comparing util_test.t1 to util_test.t1                           [FAIL]
# Object definitions differ. (--changes-for=server1)
#

  CREATE TABLE `t1` (
-   `a` char(30) DEFAULT NULL
+   `a` char(30) DEFAULT NULL,
?                            +
+   `b` int(11) DEFAULT NULL
  ) ENGINE=MEMORY DEFAULT CHARSET=latin1
Compare failed. One or more differences found.
Test case 2 - database doesn't exist
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
ERROR: The database does not exist: util_test1
Test case 3 - database doesn't exist
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
ERROR: The database does not exist: util_test2
Test case 4 - object doesn't exist
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
ERROR: The object util_test.t33 does not exist.
Test case 5 - object doesn't exist
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
ERROR: The object util_test.t31 does not exist.
Test case 6 - malformed argument util_test.util_test 
Usage: mysqldiff.py --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4

mysqldiff.py: error: Invalid format for object compare argument. Format should be: db1.object:db2:object or db1:db2.
Test case 7 - malformed argument util_test.t3:util_test 
Usage: mysqldiff.py --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4

mysqldiff.py: error: Incorrect object compare argument. Format should be: db1.object:db2:object or db1:db2.
Test case 8 - malformed argument util_test:util_test.t3 
Usage: mysqldiff.py --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4

mysqldiff.py: error: Incorrect object compare argument. Format should be: db1.object:db2:object or db1:db2.
Test case 9 - malformed argument util_test.t3.t3:util_test.t3 
Usage: mysqldiff.py --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4

mysqldiff.py: error: Invalid format for object compare argument. Format should be: db1.object:db2:object or db1:db2.
Test case 10 - malformed argument util_test.t3:util_test..t4 
Usage: mysqldiff.py --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4

mysqldiff.py: error: Incorrect object compare argument. Format should be: db1.object:db2:object or db1:db2.
Test case 11 - some objects don't exist in dbs
# server1 on localhost: ... connected.
# server2 on localhost: ... connected.
# WARNING: Objects in server1.util_test but not in server2.util_test:
#        TABLE: t5
# WARNING: Objects in server2.util_test but not in server1.util_test:
#        TABLE: t6
Compare failed. One or more differences found.
Test case 12 - no objects specified.
Usage: mysqldiff.py --server1=user:pass@host:port:socket --server2=user:pass@host:port:socket db1.object1:db2.object1 db3:db4

mysqldiff.py: error: No objects specified to compare.
