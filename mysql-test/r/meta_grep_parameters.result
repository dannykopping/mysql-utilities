Test case 1 - do the help
Usage: mysqlmetagrep.py --server=user:pass@host:port:socket [options] pattern

mysqlmetagrep - search metadata

Options:
  --version             show program's version number and exit
  --help                display a help message and exit
  --server=SERVER       connection information for the server in the form:
                        <user>[:<password>]@<host>[:<port>][:<socket>] or
                        <login-path>[:<port>][:<socket>].
  -b, --body            search the body of routines, triggers, and events as
                        well
  --search-objects=OBJECT_TYPES, --object-types=OBJECT_TYPES
                        the object type to search in: a comma-separated list
                        of one or more of: 'database', 'trigger', 'user',
                        'routine', 'column', 'table', 'partition', 'event',
                        'view'
  -G, --basic-regexp, --regexp
                        use 'REGEXP' operator to match pattern. Default is to
                        use 'LIKE'.
  -p, --print-sql, --sql
                        print the statement instead of sending it to the
                        server
  -e PATTERN, --pattern=PATTERN
                        pattern to use when matching. Required if the pattern
                        looks like a connection specification.
  --database=DATABASE_PATTERN
                        only look at objects in databases matching this
                        pattern
  -f FORMAT, --format=FORMAT
                        display the output in either grid (default), tab, csv,
                        or vertical format
Test case 2 - do the SQL for a simple search

SELECT 
  `Object Type`, `Object Name`, `Database`,
  `Field Type`, GROUP_CONCAT(`Field`) AS `Matches`
FROM (
  SELECT 
    'SCHEMA' AS `Object Type`,
    schema_name AS `Object Name`,
    schema_name AS `Database`,
    'DATABASE' AS `Field Type`,
    schema_name AS `Field`
  FROM
    information_schema.schemata
  WHERE
    schema_name REGEXP 't2'
UNION
  SELECT 
    'TRIGGER' AS `Object Type`,
    trigger_name AS `Object Name`,
    trigger_schema AS `Database`,
    'TRIGGER' AS `Field Type`,
    trigger_name AS `Field`
  FROM
    information_schema.triggers
  WHERE
    trigger_name REGEXP 't2' OR action_statement REGEXP 't2'
UNION
  SELECT DISTINCT
    'USER' AS `Object Type`,
    grantee AS `Object Name`,
    table_schema AS `Database`,
    'USER' AS `Field Type`,
    grantee AS `Field`
  FROM
    information_schema.schema_privileges
  WHERE
    grantee REGEXP 't2' OR privilege_type REGEXP 't2'
UNION
  SELECT 
    routine_type AS `Object Type`,
    routine_name AS `Object Name`,
    routine_schema AS `Database`,
    'ROUTINE' AS `Field Type`,
    routine_name AS `Field`
  FROM
    information_schema.routines
  WHERE
    routine_name REGEXP 't2' OR routine_body REGEXP 't2'
UNION
  SELECT 
    'TABLE' AS `Object Type`,
    table_name AS `Object Name`,
    table_schema AS `Database`,
    'COLUMN' AS `Field Type`,
    column_name AS `Field`
  FROM
    information_schema.columns
  WHERE
    column_name REGEXP 't2'
UNION
  SELECT 
    'TABLE' AS `Object Type`,
    table_name AS `Object Name`,
    table_schema AS `Database`,
    'TABLE' AS `Field Type`,
    table_name AS `Field`
  FROM
    information_schema.tables
  WHERE
    table_name REGEXP 't2'
UNION
  SELECT 
    'TABLE' AS `Object Type`,
    table_name AS `Object Name`,
    table_schema AS `Database`,
    'PARTITION' AS `Field Type`,
    partition_name AS `Field`
  FROM
    information_schema.partitions
  WHERE
    partition_name REGEXP 't2'
UNION
  SELECT 
    'EVENT' AS `Object Type`,
    event_name AS `Object Name`,
    event_schema AS `Database`,
    'EVENT' AS `Field Type`,
    event_name AS `Field`
  FROM
    information_schema.events
  WHERE
    event_name REGEXP 't2' OR event_body REGEXP 't2'
UNION
  SELECT 
    'VIEW' AS `Object Type`,
    table_name AS `Object Name`,
    table_schema AS `Database`,
    'VIEW' AS `Field Type`,
    table_name AS `Field`
  FROM
    information_schema.views
  WHERE
    table_name REGEXP 't2'
) AS all_results
  GROUP BY `Object Type`, `Database`, `Object Name`, `Field Type`
Test case 3 - do the SQL for a simple search with type

SELECT 
  `Object Type`, `Object Name`, `Database`,
  `Field Type`, GROUP_CONCAT(`Field`) AS `Matches`
FROM (
  SELECT 
    'TABLE' AS `Object Type`,
    table_name AS `Object Name`,
    table_schema AS `Database`,
    'TABLE' AS `Field Type`,
    table_name AS `Field`
  FROM
    information_schema.tables
  WHERE
    table_name REGEXP 't2'
) AS all_results
  GROUP BY `Object Type`, `Database`, `Object Name`, `Field Type`
