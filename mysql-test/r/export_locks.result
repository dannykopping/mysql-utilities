Test case 1 - export with default locking
# Source on localhost: ... connected.
# Exporting metadata from util_test
DROP DATABASE IF EXISTS `util_test`;
CREATE DATABASE `util_test`;
USE `util_test`;
# TABLE: util_test.t1
CREATE TABLE `t1` (
  `a` char(30) DEFAULT NULL
) ENGINE=MEMORY DEFAULT CHARSET=latin1;
# TABLE: util_test.t2
CREATE TABLE `t2` (
  `a` char(30) DEFAULT NULL
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
# TABLE: util_test.t3
CREATE TABLE `t3` (
  `a` int(11) NOT NULL AUTO_INCREMENT,
  `b` char(30) DEFAULT NULL,
  PRIMARY KEY (`a`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;
# TABLE: util_test.t4
CREATE TABLE `t4` (
  `c` int(11) NOT NULL,
  `d` int(11) NOT NULL,
  KEY `ref_t3` (`c`),
  CONSTRAINT `ref_t3` FOREIGN KEY (`c`) REFERENCES `t3` (`a`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
# VIEW: util_test.v1
CREATE ALGORITHM=UNDEFINED DEFINER=`XXXX`@`XXXXXXXXX` SQL SECURITY DEFINER VIEW `util_test`.`v1` AS select `util_test`.`t1`.`a` AS `a` from `util_test`.`t1`;
# TRIGGER: util_test.trg
DELIMITER ||
CREATE DEFINER=`XXXX`@`XXXXXXXXX` TRIGGER util_test.trg AFTER INSERT ON util_test.t1 FOR EACH ROW INSERT INTO util_test.t2 VALUES('Test objects count');
||
DELIMITER ;
# PROCEDURE: util_test.p1
DELIMITER ||
CREATE DEFINER=`XXXX`@`XXXXXXXXX` PROCEDURE `p1`(p1 CHAR(20))
INSERT INTO util_test.t1 VALUES ("50");
||
DELIMITER ;
# FUNCTION: util_test.f1
DELIMITER ||
CREATE DEFINER=`XXXX`@`XXXXXXXXX` FUNCTION `f1`() RETURNS int(11)
    DETERMINISTIC
RETURN (SELECT 1);
||
DELIMITER ;
# Grant:
GRANT ALTER ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT ALTER ROUTINE ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT CREATE ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT CREATE ROUTINE ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT CREATE TEMPORARY TABLES ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT CREATE VIEW ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT DELETE ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT DROP ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT EVENT ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT EXECUTE ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT INDEX ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT INSERT ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT LOCK TABLES ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT REFERENCES ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT SELECT ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT SHOW VIEW ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT TRIGGER ON `util_test`.* TO 'joe'@'user';
# Grant:
GRANT UPDATE ON `util_test`.* TO 'joe'@'user';
#...done.
USE `util_test`;
# Exporting data from util_test
# Data for table `util_test`.`t1`: 
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`: 
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
# Data for table `util_test`.`t3`: 
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
# Data for table `util_test`.`t4`: 
INSERT INTO `util_test`.`t4` VALUES (3, 2);
#...done.
Test case 2 - export data with no-locks locking
# Source on localhost: ... connected.
USE `util_test`;
# Exporting data from util_test
# Data for table `util_test`.`t1`: 
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`: 
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
# Data for table `util_test`.`t3`: 
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
# Data for table `util_test`.`t4`: 
INSERT INTO `util_test`.`t4` VALUES (3, 2);
#...done.
Test case 3 - export data with lock-all locking
# Source on localhost: ... connected.
USE `util_test`;
# Exporting data from util_test
# Data for table `util_test`.`t1`: 
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`: 
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
# Data for table `util_test`.`t3`: 
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
# Data for table `util_test`.`t4`: 
INSERT INTO `util_test`.`t4` VALUES (3, 2);
#...done.
Test case 4 - export data with snapshot locking
# Source on localhost: ... connected.
USE `util_test`;
# Exporting data from util_test
# Data for table `util_test`.`t1`: 
INSERT INTO `util_test`.`t1` VALUES ('01 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('02 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('03 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('04 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('05 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('06 Test Basic database example');
INSERT INTO `util_test`.`t1` VALUES ('07 Test Basic database example');
# Data for table `util_test`.`t2`: 
INSERT INTO `util_test`.`t2` VALUES ('11 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('12 Test Basic database example');
INSERT INTO `util_test`.`t2` VALUES ('13 Test Basic database example');
# Data for table `util_test`.`t3`: 
INSERT INTO `util_test`.`t3` VALUES (1, '14 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (2, '15 test fkeys');
INSERT INTO `util_test`.`t3` VALUES (3, '16 test fkeys');
# Data for table `util_test`.`t4`: 
INSERT INTO `util_test`.`t4` VALUES (3, 2);
#...done.
