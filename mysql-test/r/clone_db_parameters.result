Test case 1 - normal run
# Source on localhost: ... connected.
# Destination on localhost: ... connected.
# Copying database util_test renamed as util_db_clone
# Copying TABLE util_test.t1
# Copying TABLE util_test.t2
# Copying TABLE util_test.t3
# Copying TABLE util_test.t4
# Copying VIEW util_test.v1
# Copying PROCEDURE util_test.p1
# Copying FUNCTION util_test.f1
# Copying GRANTS from util_test
# Copying data for TABLE util_test.t1
# Copying data for TABLE util_test.t2
# Copying data for TABLE util_test.t3
# Copying data for TABLE util_test.t4
# Copying TRIGGER util_test.trg
# Copying EVENT util_test.e1
#...done.
Test case 2 - operation fails - need force
# Source on localhost: ... connected.
# Destination on localhost: ... connected.
# Copying database util_test renamed as util_db_clone
ERROR: destination database exists. Use --force to overwrite existing database.
Test case 3 - help
Usage: mysqldbcopy.py --source=user:pass@host:port:socket --destination=user:pass@host:port:socket orig_db:new_db

mysqldbcopy - copy databases from one server to another

Options:
  --version             show program's version number and exit
  --help                display a help message and exit
  --source=SOURCE       connection information for source server in the form:
                        <user>[:<password>]@<host>[:<port>][:<socket>] or
                        <login-path>[:<port>][:<socket>].
  --destination=DESTINATION
                        connection information for destination server in the
                        form: <user>[:<password>]@<host>[:<port>][:<socket>]
                        or <login-path>[:<port>][:<socket>].
  -f, --force           drop the new database or object if it exists
  --threads=THREADS     use multiple threads (connections) for insert
  -x EXCLUDE, --exclude=EXCLUDE
                        exclude one or more objects from the operation using
                        either a specific name (e.g. db1.t1), a LIKE pattern
                        (e.g. db1.t% or db%.%) or a REGEXP search pattern. To
                        use a REGEXP search pattern for all exclusions, you
                        must also specify the --regexp option. Repeat the
                        --exclude option for multiple exclusions.
  -a, --all             include all databases
  --skip=SKIP_OBJECTS   specify objects to skip in the operation in the form
                        of a comma-separated list (no spaces). Valid values =
                        tables, views, triggers, procedures, functions,
                        events, grants, data, create_db
  -v, --verbose         control how much information is displayed. e.g., -v =
                        verbose, -vv = more verbose, -vvv = debug
  -q, --quiet           turn off all messages for quiet execution.
  --new-storage-engine=NEW_ENGINE
                        change all tables to use this storage engine if
                        storage engine exists on the destination.
  --default-storage-engine=DEF_ENGINE
                        change all tables to use this storage engine if the
                        original storage engine does not exist on the
                        destination.
  --locking=LOCKING     choose the lock type for the operation: no-locks = do
                        not use any table locks, lock-all = use table locks
                        but no transaction and no consistent read, snaphot
                        (default): consistent read using a single transaction.
  -G, --basic-regexp, --regexp
                        use 'REGEXP' operator to match pattern. Default is to
                        use 'LIKE'.
  --rpl-user=RPL_USER   the user and password for the replication user
                        requirement, in the form: <user>[:<password>] or
                        <login-path>. E.g. rpl:passwd - By default = none
  --rpl=RPL_MODE, --replication=RPL_MODE
                        include replication information. Choices = 'master' =
                        include the CHANGE MASTER command using source server
                        as the master, 'slave' = include the CHANGE MASTER
                        command using the destination server's master
                        information.
  --skip-gtid           skip creation and execution of GTID statements during
                        copy.
Test case 4 - no data
# Source on localhost: ... connected.
# Destination on localhost: ... connected.
# Copying database util_test renamed as util_db_clone
# Copying TABLE util_test.t1
# Copying TABLE util_test.t2
# Copying TABLE util_test.t3
# Copying TABLE util_test.t4
# Copying VIEW util_test.v1
# Copying PROCEDURE util_test.p1
# Copying FUNCTION util_test.f1
# Copying GRANTS from util_test
# Copying TRIGGER util_test.trg
# Copying EVENT util_test.e1
#...done.
OBJECT COUNTS: tables = 4, views = 1, triggers = 1, procedures = 1, functions = 1, events = 1 
Test case 5 - quiet clone
