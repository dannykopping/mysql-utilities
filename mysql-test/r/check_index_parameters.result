Test case 1 - do the help
Usage: mysqlindexcheck.py --server=user:pass@host:port:socket db1.table1 db2 db3.table2

mysqlindexcheck - check for duplicate or redundant indexes

Options:
  --version             show program's version number and exit
  --help                display a help message and exit
  --server=SERVER       connection information for the server in the form:
                        <user>[:<password>]@<host>[:<port>][:<socket>] or
                        <login-path>[:<port>][:<socket>].
  -d, --show-drops      display DROP statements for dropping indexes
  -i, --show-indexes    display indexes for each table
  -s, --skip            skip tables that do not exist
  -f FORMAT, --format=FORMAT
                        display the list of indexes per table in either sql,
                        grid (default), tab, csv, or vertical format
  --stats               show index performance statistics
  --best=BEST           limit index statistics to the best N indexes
  --worst=WORST         limit index statistics to the worst N indexes
  -v, --verbose         control how much information is displayed. e.g., -v =
                        verbose, -vv = more verbose, -vvv = debug
Test case 2 - show drops for a table with dupe indexes
# Source on localhost: ... connected.
# Checking indexes...
# Getting indexes for util_test_a.t1
# The following indexes are duplicates or redundant for table util_test_a.t1:
#
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#
# DROP statements:
#
ALTER TABLE util_test_a.t1 DROP INDEX s4;
ALTER TABLE util_test_a.t1 DROP INDEX s2;
#
#
# ...done.
Test case 3 - show drops for a table with dupe indexes
# Source on localhost: ... connected.
# The following indexes are duplicates or redundant for table util_test_a.t1:
#
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#
# DROP statements:
#
ALTER TABLE util_test_a.t1 DROP INDEX s4;
ALTER TABLE util_test_a.t1 DROP INDEX s2;
#
Test case 4 - show drops for a table without dupe indexes
# Source on localhost: ... connected.
# Checking indexes...
# Getting indexes for util_test_c.t6
# Table util_test_c.t6 is not indexed.
#
# ...done.
Test case 5 - same as test case 2 but quiet
# Source on localhost: ... connected.
# The following indexes are duplicates or redundant for table util_test_a.t1:
#
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#
# DROP statements:
#
ALTER TABLE util_test_a.t1 DROP INDEX s4;
ALTER TABLE util_test_a.t1 DROP INDEX s2;
#
Test case 6 - same as test case 4 but quiet
# Source on localhost: ... connected.
Test case 7 - show indexes
# Source on localhost: ... connected.
# Showing indexes from util_test_a.t1:
#
+--------------+--------+----------+----------+----------+
| database     | table  | name     | type     | columns  |
+--------------+--------+----------+----------+----------+
| util_test_a  | t1     | PRIMARY  | BTREE    | A        |
| util_test_a  | t1     | s1       | SPATIAL  | e(32)    |
| util_test_a  | t1     | s2       | SPATIAL  | d(32)    |
| util_test_a  | t1     | s4       | SPATIAL  | d(32)    |
+--------------+--------+----------+----------+----------+
#
# The following indexes are duplicates or redundant for table util_test_a.t1:
#
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
Test case 8 - show indexes with -i
# Source on localhost: ... connected.
# Showing indexes from util_test_a.t1:
#
+--------------+--------+----------+----------+----------+
| database     | table  | name     | type     | columns  |
+--------------+--------+----------+----------+----------+
| util_test_a  | t1     | PRIMARY  | BTREE    | A        |
| util_test_a  | t1     | s1       | SPATIAL  | e(32)    |
| util_test_a  | t1     | s2       | SPATIAL  | d(32)    |
| util_test_a  | t1     | s4       | SPATIAL  | d(32)    |
+--------------+--------+----------+----------+----------+
#
# The following indexes are duplicates or redundant for table util_test_a.t1:
#
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#
CREATE INDEX s2 ON util_test_a.t1 (d(32)) 
#     may be redundant or duplicate of:
CREATE INDEX s4 ON util_test_a.t1 (d(32)) 
